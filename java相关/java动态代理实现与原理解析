java动态代理原理与实现

一、代理模式
代理模式是常用的java设计模式，他的特征是代理类与委托类有同样的接口，代理类主要负责为委托类预处理消息、
过滤消息、把消息转发给委托类，以及事后处理消息等。代理类与委托类之间通常会存在关联关系，一个代理类的对象
与一个委托类的对象关联，代理类的对象本身并不真正实现服务，而是通过调用委托类的对象的相关方法，来提供特定的服务。 

对于代理，我们根据创建代理的时间点可以将代理类可以分为静态代理和动态代理。 

静态代理：由程序员创建或特定工具自动生成源代码，也就是在编译时就已经将接口，被代理类，代理类等确定下来。
在程序运行前，代理类的.class文件已经生成。

de

静态代理如果每一个类都需要自己手动去创建代理类，会有大量的重复代码，而且比较麻烦。这个时候根据需要动态生生代理类
或者代理实例，就显得方便很多。下面看看动态代理是如何实现的。 

动态代理：我们只需要接口和被代理类，代理类是在程序运行时，运用反射机制动态创建而成。而且我们只需要更改
代理关联对象(InvocationHandler),就可以动态地创建出不同的代理类，大大增加了代理的灵活性。


二、动态代理的简单实现




三、动态代理的步骤与原理解析


四、总结
为什么动态代理智能代理接口。